@page "/product"
@inject IProductRepository _productRepository
@inject IJSRuntime _jsRuntime

<_DeleteConfirmation OnDeleteConfirmation="ConfirmDelete_Click"></_DeleteConfirmation>
<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Product List</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="product/create" class="btn btn-primary form-control">Add New Product </a>
    </div>

    <div class="col-12 p-3">

        @if (isLoading)
        {
            <div class="text-center">
                <img src="img/loading.gif" />
            </div>
        }
        else
        {
            if (products.Any())
            {


                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Shop Favorites</th>
                            <th>Customer Favorites</th>
                            <th>Category</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prod in products)
                        {
                            <tr>
                                <td>
                                    @prod.Name
                                </td>
                                <th>
                                    <input type="checkbox" disabled checked="@prod.ShopFavorites">
                                </th>
                                <th>
                                    <input type="checkbox" disabled checked="@prod.CustomerFavorites">
                                </th>
                                <th>
                                    @prod.Category.Name
                                </th>
                                <td>
                                    <NavLink href="@($"product/edit/{prod.Id}")" class="btn-primary btn">Edit</NavLink>
                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(prod.Id)">Delete</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div>
                    No records found!
                </div>
            }
        }

    </div>
</div>

@code {
    public IEnumerable<ProductDTO> products { get; set; } = new List<ProductDTO>();
    private bool isLoading { get; set; }
    private int DeleteCategoryId { get; set; } = 0;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await loadCategory();
    }
    private async Task loadCategory()
    {
        isLoading = true;
        StateHasChanged();
        products = await _productRepository.GetAll();
        isLoading = false;
        StateHasChanged();

    }
    private void HandleDelete(int id)
    {
        DeleteCategoryId = id;
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        if (isConfirmed && DeleteCategoryId != 0)
        {
            //delete
            await _productRepository.Delete(DeleteCategoryId);
            await loadCategory();
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        }
        else
        {
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        }
    }

}
